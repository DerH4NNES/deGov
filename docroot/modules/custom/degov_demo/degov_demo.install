<?php

use Drupal\node\Entity\Node;
use Symfony\Component\Yaml\Yaml;
use Drupal\taxonomy\Entity\Term;
use Drupal\menu_link_content\Entity\MenuLinkContent;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\Core\Language\Language;
use Drupal\media_entity\Entity\Media;

/**
 * Implements hook_install().
 *
 * Create demo content, when module installs
 *
 * @see system_install()
 */

function degov_demo_install() {

  // Module Path
  $modulePath = sprintf('modules/custom/degov_demo/assets', \Drupal::root());
  $moduleRealPath = \Drupal::service('file_system')->realpath($modulePath);

  // Create Images
  if (true) {

    $files_ids = null;
    $files = null;
    $files = glob($moduleRealPath.'/images/*.jpg');
    foreach ($files as $file) {

      // Create file object
      $image_system = null;
      $image_system = file_save_data(file_get_contents($file), 'public://'.basename($file), FILE_EXISTS_REPLACE);
      if ($image_system) {

        // Create media object
        $image_media = null;
        $image_media = Media::create([
          'bundle' => 'image',
          'uid' => '1',
          'langcode' => 'de',
          'status' => Media::PUBLISHED,
          'image' => [
            'target_id' => $image_system->id(),
            'alt' => t('Demo Image'),
            'title' => t('Demo Image'),
          ],
        ]);
        $image_media->save();

        $files_ids[] = $image_media->id();

      }

    }

  }


  // Create Paragraphs
  if (true) {

    // Load assets
    $paragraphs_ids = null;
    $assets = file_get_contents($moduleRealPath . '/degov_demo_paragraphs.assets.yml');
    $assets = Yaml::parse($assets);
    if ($assets) {

      foreach ($assets as $paragraphs_type => $paragraphs) {

        foreach ($paragraphs as $paragraph) {

          $insert_fields = null;
          $insert_fields['type'] = $paragraphs_type;
          foreach ($paragraph as $field => $value) {

            if (preg_match('/\_image$/', $field)) {
              $insert_fields[$field][0]['target_id'] = $files_ids[array_rand($files_ids, 1)];
            }
            else if (preg_match('/\_color$/', $field)) {
              $insert_fields[$field]['color'] = $value;
            }
            else if (preg_match('/\_files$/', $field)) {
              // $insert_fields[$field]['target_id'] = null;
            }
            else if (preg_match('/\_media$/', $field)) {
              // $insert_fields[$field]['target_id'] = null;
            }
            else if (preg_match('/\_links$/', $field)) {
              // $insert_fields[$field]['target_id'] = null;
            }
            else {
              $insert_fields[$field] = $value;
            }

          }

          // Save Paragraph
          $oParagraph = Paragraph::create($insert_fields);
          $oParagraph->save();

          // Save Paragraph Id
          $paragraphs_ids[] = $oParagraph->id();

        }

      }

    }

  }


  // Create Content-Types
  if (true) {

    // Load assets
    $assets = file_get_contents($moduleRealPath . '/degov_demo_contents.assets.yml');
    $assets = Yaml::parse($assets);
    if ($assets) {

      // Taxonomies
      $taxterm_ids = null;
      foreach ($assets['taxonomy'] as $tax) {

        // Taxonomy
        foreach ($tax as $key => $terms) {

          $taxterm_ids[$key] = null;
          foreach ($terms as $term) {

            // Load and Check Term
            $terms_obj = null;
            $terms_obj = taxonomy_term_load_multiple_by_name($term, $key);

            if (!$terms_obj) {

              // Save Term
              $res = null;
              $res = Term::create([
                'vid' => $key,
                'name' => $term,
              ])->save();

              // Load new Term
              if ($res) {
                $terms_obj = taxonomy_term_load_multiple_by_name($term, $key);
              }

            }

            if ($terms_obj) {
              foreach ($terms_obj as $tid => $term_item) {
                // Save Term ID
                $taxterm_ids[$key][] = $tid;
              }

            }

          }

        }

      }

    }

    // Content Types
    $home_page_id = null;
    $section_page_ids = null;
    $section_page_menu_entries = null;
    $home_page_articles_ids = null;
    foreach ($assets as $content_type => $entries) {

      if ($content_type == 'taxonomy') {
        continue;
      }

      // Content Type Datas
      foreach ($entries as $entry) {

        $insert_fields = null;

        // Defualt Fields
        $insert_fields['type'] = $content_type;
        $insert_fields['title'] = $entry['field_title'];
        $insert_fields['status'] = 1;

        // Content Type Datas
        $xkey = null;
        $xparent = null;
        foreach ($entry as $page_field => $value) {

          if ($page_field == 'xkey') {
            $xkey = $value;
          }
          else if ($page_field == 'xparent') {
            $xparent = $value;
          }
          else if ($page_field == 'field_title') {
            continue;
          }
          else if (preg_match('/\_color$/', $page_field)) {
            $insert_fields[$page_field]['color'] = $value;
          }
          else if (preg_match('/\_image$/', $page_field)) {
            $insert_fields[$page_field][0]['target_id'] = $files_ids[array_rand($files_ids, 1)];
          }
          else if (preg_match('/\_section$/', $page_field)) {
            $insert_fields[$page_field][0]['target_id'] = $section_page_ids[$xparent];
          }
          else if (preg_match('/\_contents$/', $page_field)) {
            for($i=0;$i<3;$i++) {
              $insert_fields[$page_field][$i]['target_id'] = $paragraphs_ids[array_rand($paragraphs_ids,1)];
              $insert_fields[$page_field][$i]['target_revision_id'] = $insert_fields[$page_field][$i]['target_id'];
            }
          }
          else if (preg_match('/\_tags$/', $page_field)) {
            for($i=0;$i<3;$i++) {
              $insert_fields[$page_field][$i]['target_id'] = $taxterm_ids['tags'][array_rand($taxterm_ids['tags'],1)];
            }
          }
          else {
            $insert_fields[$page_field]['value'] = $value;
          }

        }

        // Save Node
        $node = null;
        $node = Node::create($insert_fields);
        $node->save();

        // Save Home Page Id
        if (in_array($content_type, array('home_page'))) {

          $home_page_id = $node->id();

        }

        // Add Node to Menu
        if (in_array($content_type, array('section_page'))) {

          $section_page_ids[$xkey] = $node->id();

        }

        if (in_array($content_type, array('section_page', 'next_page'))) {

          $first_level = MenuLinkContent::create([
            'title' => $entry['menu_title'],
            'link' => ['uri' => 'internal:/node/' . $node->id()],
            'menu_name' => 'main',
            'expanded' => true,
            'weight' => $entry['weight'],
          ]);

          $first_level->save();

          if (in_array($content_type, array('section_page'))) {

            $section_page_menu_entries[$xkey] = $first_level;

            // Save Ids for Home Page
            $home_page_articles_ids[] = $node->id();

          }

        } // Add Node to Menu
        else if (in_array($content_type, array('article_page', 'event_page'))) {

          $second_level = MenuLinkContent::create([
            'title' => $insert_fields['title'],
            'link' => ['uri' => 'internal:/node/' . $node->id()],
            'menu_name' => 'main',
            'parent' => $section_page_menu_entries[$xparent]->getPluginId(),
            'expanded' => true,
          ]);

          $second_level->save();

          // Save Ids for Home Page
          $home_page_articles_ids[] = $node->id();

        }

      }

    }

    // Set Main/Articles for Home Page
    $node = null;
    $node = Node::load($home_page_id);
    $node->field_home_page_mainarticle = array('target_id' =>  $home_page_articles_ids[0]);
    $node->field_home_page_contents = array('target_id' => $home_page_articles_ids[1]);
    $node->field_home_page_contents = array('target_id' => $home_page_articles_ids[2]);
    $node->field_home_page_contents = array('target_id' => $home_page_articles_ids[3]);
    $node->save();

  }

}
