<?php

use Drupal\Core\Routing\RouteMatchInterface;
use Symfony\Component\DomCrawler\Crawler;

/**
 * @file
 * Contains degov_demo.module..
 */

/**
 * Implements hook_help().
 */
function degov_vsm_nrw_help($route_name, RouteMatchInterface $route_match) {

  switch ($route_name) {

    // Main module help for the degov_welcome module.
    case 'help.page.degov_vsm_nrw':

      $output = '';
      return $output;

    default:

  }

}

/**
 * VSM NRW Search Request
 * @param $query
 * @param string $area
 * @param array $options
 * @return array
 */
function degov_vsm_nrw_search($query, $area='land', $options=array())
{

  // Default Options
  if (empty($options)) {
    $options['synonyms'] = false;
    $options['competences'] = false;
    $options['resources'] = true;
  }

  // Load Search Results as XML String
  $xml = null;
  $xml = file_get_contents('http://vsm.d-nrw.de/gsa/searchresult/?q=' . $query . '&area=' . $area.'&num=10');
  if ($xml == null) return false;

  // Parsing XML String
  $crawler = null;
  $crawler = new Crawler($xml);
  if ($crawler == null) return false;

  // Filter Synonyms
  $synonyms = null;
  if ($options['synonyms'] == true) {

    $synonyms = $crawler->filterXPath('//GSP/Synonyms/OneSynonym/text()')->each(function (Crawler $node, $i) {
      return trim($node->text());
    });

  }

  // Filter Competences
  $competences = null;
  if ($options['competences'] == true) {

    $competences = $crawler->filterXPath('//GSP/competences/competence')->each(function (Crawler $node, $i) {

      return array(
        'leikaKey' => $node->attr('leikaKey'),
        'description' => $node->attr('description'),
        'agsKey' => $node->attr('agsKey'),
        'rs' => $node->attr('rs'),
        'commune' => $node->attr('commune'),
        'plz' => $node->attr('plz'),
        'short_text' => $node->filterXPath('//short_text/text()')->each(function (Crawler $node, $i) {
          return $node->text();
        })[0],
        'full_text' => $node->filterXPath('//full_text/text()')->each(function (Crawler $node, $i) {
          return $node->text();
        })[0],
        'legal_basis' => $node->filterXPath('//legal_basis/text()')->each(function (Crawler $node, $i) {
          return $node->text();
        })[0],
        'course_of_the_procedure' => $node->filterXPath('//course_of_the_procedure/text()')->each(function (Crawler $node, $i) {
          return $node->text();
        })[0],
        'fees' => $node->filterXPath('//fees/text()')->each(function (Crawler $node, $i) {
          return $node->text();
        })[0],
        'makespan' => $node->filterXPath('//makespan/text()')->each(function (Crawler $node, $i) {
          return $node->text();
        })[0],
        'respites' => $node->filterXPath('//respites/text()')->each(function (Crawler $node, $i) {
          return $node->text();
        })[0],
        'required_documents' => $node->filterXPath('//required_documents/text()')->each(function (Crawler $node, $i) {
          return $node->text();
        })[0],
        'requirements' => $node->filterXPath('//requirements/text()')->each(function (Crawler $node, $i) {
          return $node->text();
        })[0],
        'forms' => $node->filterXPath('//forms/text()')->each(function (Crawler $node, $i) {
          return $node->text();
        })[0],
        'further_information' => $node->filterXPath('//further_information/text()')->each(function (Crawler $node, $i) {
          return $node->text();
        })[0],
        'specialities' => $node->filterXPath('//specialities/text()')->each(function (Crawler $node, $i) {
          return $node->text();
        })[0],
        'authority' => array(
          'id' => $node->filterXPath('//authority/id/text()')->each(function (Crawler $node, $i) {
            return $node->text();
          })[0],
          'name' => $node->filterXPath('//authority/name/text()')->each(function (Crawler $node, $i) {
            return $node->text();
          })[0],
          'street' => $node->filterXPath('//authority/street/text()')->each(function (Crawler $node, $i) {
            return $node->text();
          })[0],
          'houseNumber' => $node->filterXPath('//authority/houseNumber/text()')->each(function (Crawler $node, $i) {
            return $node->text();
          })[0],
          'postcode' => $node->filterXPath('//authority/postcode/text()')->each(function (Crawler $node, $i) {
            return $node->text();
          })[0],
          'city' => $node->filterXPath('//authority/city/text()')->each(function (Crawler $node, $i) {
            return $node->text();
          })[0],
          'phone' => $node->filterXPath('//authority/phone/text()')->each(function (Crawler $node, $i) {
            return $node->text();
          })[0],
          'fax' => $node->filterXPath('//authority/fax/text()')->each(function (Crawler $node, $i) {
            return $node->text();
          })[0],
          'emailAddress' => $node->filterXPath('//authority/emailAddress/text()')->each(function (Crawler $node, $i) {
            return $node->text();
          })[0],
          'websiteURL' => $node->filterXPath('//authority/websiteURL/text()')->each(function (Crawler $node, $i) {
            return $node->text();
          })[0],
        ),
      );

    });

  }

  // Filter Resources
  $resources = null;
  if ($options['resources'] == true) {
    $resources = $crawler->filterXPath('//GSP/RES/R')->each(function (Crawler $node, $i) {

      return array(
        'mime' => $node->attr('MIME'),
        'url' => $node->filterXPath('//U/text()')->each(function (Crawler $node, $i) {
          return $node->text();
        })[0],
        'title' => $node->filterXPath('//T/text()')->each(function (Crawler $node, $i) {
          return $node->text();
        })[0],
        'description' => $node->filterXPath('//S/text()')->each(function (Crawler $node, $i) {
          return $node->text();
        })[0],
      );

    });

  }

  // Return Result Array
  return array(
    'synonyms' => $synonyms,
    'competences' => $competences,
    'resources' => $resources,
  );

}
